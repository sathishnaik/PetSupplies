(function () {
    'use strict';

    var angularApp = angular.module("app");
	
	angularApp.controller("CartController",['$rootScope','$scope','CartService','OrderService',
	                       function($rootScope,$scope,CartService,OrderService){
		
		$scope.cartList=[];
		$scope.cartTotalPrice=0;
		$scope.order={};
		
		CartService.getCartsByUserId($rootScope.userLoggedIn.userid, function(cartList) {
			 $scope.cartList = cartList;
			 angular.forEach($scope.cartList,function(value,index){
				 $scope.cartTotalPrice =$scope.cartTotalPrice+value.totalPrice;
	            })
         });
		  
		  $scope.placeOrder = function(cartList){
			  $scope.order.userId=$rootScope.userLoggedIn.userid;
			  $scope.order.orderPrice=$scope.cartTotalPrice;
			  var currentDate = new Date();
			  $scope.order.orderDate = Date.now();
			  $scope.order.deliveryDate=currentDate.setDate(currentDate.getDate() + 7);
			  $scope.order.orderStatus="ORDER_DISPATCHED";
			
			  OrderService.saveOrder($scope.order).success(function (data) {
					  $scope.status = 'User Order saved successfully!';
					  $scope.order = data;
					  saveOrderDetails(cartList);
					  removeUserCart(cartList);
					  $scope.cartList=[];
			            }).error(function (error) {
			                $scope.status = 'Unable to save Order: ' + error.message;
			            });
					}
		  
		  function saveOrderDetails(cartList){
			  angular.forEach(cartList,function(value,index){
					var orderDetail={};
					orderDetail.order=$scope.order;
					orderDetail.product=value.product;
					orderDetail.productQuantity = value.productQuantity;
					orderDetail.totalPrice = value.totalPrice;
					 OrderService.saveOrderDetail(orderDetail).success(function (data) {
						 console.log(data);
					 }).error(function (error) {
	                $scope.status = 'Unable to save Order Detail: ' + error.message;
	            })
		            })
		  }
		  
		  function removeUserCart(cartList){
			  angular.forEach(cartList,function(value,index){
				  console.log("value.cartId::::"+value.cartId);
				  CartService.deleteCart(value.cartId).success(function (data) {
		                $scope.status = 'Deleted Cart! Refreshing Cart list.';
		            }).error(function (error) {
		                $scope.status = 'Unable to delete Cart: ' + error.message;
		            });
		            })
		  }
	}]);
})();